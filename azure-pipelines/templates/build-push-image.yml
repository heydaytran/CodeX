steps:
  - task: Docker@2
    displayName: "Login to ACR"
    inputs:
      command: "login"
      containerRegistry: $(acrName)

  - script: |
      IMAGE_TAG=$(Build.BuildNumber)
      IMAGE_NAME=$(dockerImage)-${{ parameters.environment }}
      ACR_NAME=$(acrName)

      echo "Checking if image $IMAGE_NAME:$IMAGE_TAG exists in ACR..."

      if docker manifest inspect $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG > /dev/null 2>&1; then
        echo "âœ… Image already exists. Skipping build."
        echo "##vso[task.setvariable variable=BUILD_IMAGE;isOutput=true]false"
      else
        echo "ðŸš€ Image does not exist. Proceeding with build..."
        echo "##vso[task.setvariable variable=BUILD_IMAGE;isOutput=true]true"
      fi
    displayName: "Check if Docker Image Exists"
    name: checkImage

  - task: Docker@2
    displayName: "Build and Push Docker Image"
    condition: eq(variables['checkImage.BUILD_IMAGE'], 'true')
    inputs:
      command: "buildAndPush"
      containerRegistry: $(acrName)
      dockerfile: "$(Build.SourcesDirectory)/Dockerfile"
      repository: $(dockerImage)-${{ parameters.environment }}
      tags: $(Build.BuildNumber)
